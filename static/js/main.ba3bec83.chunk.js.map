{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["audioClips","keyCode","keyTrigger","id","file","Pad","clip","volume","muted","setRecording","React","useState","active","setActive","useEffect","document","addEventListener","handleKeyPress","removeEventListener","e","playSound","audioTag","getElementById","setTimeout","currentTime","play","prev","onClick","className","src","App","setVolume","setMuted","recording","map","type","step","onChange","event","target","valueAsNumber","value","max","min","m","index","recordArray","split","interval","setInterval","clearInterval","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba3bec83.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nconst audioClips = [\n  {\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"heater-1\",\n    file: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"heater-2\",\n    file: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"heater-3\",\n    file: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"kick\",\n    file: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"kick-1\",\n    file: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"chord-1\",\n    file: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"dry-ohh\",\n    file: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"side-stick\",\n    file: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"punchy-kick\",\n    file: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n  },\n];\n\nfunction App() {\n  const [volume, setVolume] = React.useState(1);\n  const [muted, setMuted] = useState(false);\n  const [recording, setRecording] = React.useState(\"\");\n\n  const playRecording = () => {\n    let index = 0;\n    let recordArray = recording.split(\" \");\n    const interval = setInterval(() => {\n      const audioTag = document.getElementById(recordArray[index]);\n      audioTag.volume = volume;\n      audioTag.currentTime = 0;\n      audioTag.play();\n      index++;\n    }, 300);\n    setTimeout(() => clearInterval(interval), 300 * recordArray.length - 1);\n  };\n\n  return (\n    <div id=\"drum-machine\" className=\"bg-dark w-100 text-white container\">\n      <div id=\"display\" className=\"text-center\">\n        <h2>Drum Machine</h2>\n        {audioClips.map((clip) => (\n          <Pad\n            key={clip.id}\n            clip={clip}\n            id={clip.id}\n            volume={volume}\n            muted={muted}\n            setRecording={setRecording}\n          />\n        ))}\n        <br />\n        <input\n          type=\"range\"\n          step=\"0.01\"\n          onChange={(event) => {\n            setVolume(event.target.valueAsNumber);\n          }}\n          value={volume}\n          max=\"1\"\n          min=\"0\"\n          className=\"w-30\"\n        />\n        <button\n          className=\"btn btn-secondary m-3 p-1\"\n          onClick={() => setMuted((m) => !m)}\n        >\n          {muted ? \"muted\" : \"unmuted\"}\n        </button>\n        <h3>{recording}</h3>\n        {recording && (\n          <>\n            <button onClick={playRecording} className=\"btn btn-success m-3\">\n              play\n            </button>\n            <button onClick={() => setRecording(\"\")} className=\"btn btn-danger\">\n              clear\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Pad({ clip, volume, muted, setRecording }) {\n  const [active, setActive] = React.useState(false);\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, []);\n\n  const handleKeyPress = (e) => {\n    if (e.keyCode === clip.keyCode) {\n      playSound();\n    }\n  };\n\n  const playSound = () => {\n    const audioTag = document.getElementById(clip.keyTrigger);\n    setActive(true);\n    setTimeout(() => setActive(false), 150);\n    audioTag.currentTime = 0;\n    if (muted == false) {\n      audioTag.volume = volume;\n      audioTag.play();\n    } else {\n      audioTag.volume = 0;\n    }\n    setRecording((prev) => prev + clip.keyTrigger + \" \");\n  };\n\n  return (\n    <div\n      onClick={playSound}\n      id={clip.id}\n      className={`drum-pad btn btn-secondary p-5 m-5 ${\n        active && \"drum-pad btn-danger\"\n      }`}\n    >\n      <audio className=\"clip\" id={clip.keyTrigger} src={clip.file} />\n      {clip.keyTrigger}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}